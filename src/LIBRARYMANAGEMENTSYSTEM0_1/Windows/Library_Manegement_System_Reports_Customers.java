/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LIBRARYMANAGEMENTSYSTEM0_1.Windows;

import LIBRARYMANAGEMENTSYSTEM0_1.Connection.Connections;
import com.itextpdf.text.Document;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Anjana
 */
public class Library_Manegement_System_Reports_Customers extends javax.swing.JFrame {

    Connection conn=null;
    ResultSet rs=null;
    PreparedStatement pst=null;
    
    /**
     * Creates new form Library_Manegement_System_Reports_Customers
     */
    public Library_Manegement_System_Reports_Customers() {
        initComponents();
        conn = Connections.java_db();
        loadalldatatable ();
        seticon();
        checkButton.setSelected(true);
        CombCheck.setSelectedItem("All Customers Details");
        txt_searchR.setText("All");
        //jButton3.setEnabled(true);
        //jButton2.setEnabled(false);
        this.setResizable(false);
        
        
    }

    public void loadalldatatable (){
        try{
            
            String sql="Select * from customers";            
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txt_searchR = new javax.swing.JTextField();
        checkButton = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableCus = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        CombCheck = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Library Manegement System...");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Customer id :");

        txt_searchR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchRKeyReleased(evt);
            }
        });

        checkButton.setBackground(new java.awt.Color(51, 51, 51));
        checkButton.setForeground(new java.awt.Color(255, 255, 255));
        checkButton.setText("All recodes");
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        TableCus.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TableCus);

        jButton2.setText("Generate PDF");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        CombCheck.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All Customers Details", "Customer Details", "Due Books and Customer Details", "All Due Books and Customers Details", "Read Books and Customer Details", "All Read Books and Customers Details" }));
        CombCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombCheckActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Select :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(CombCheck, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_searchR, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(checkButton)
                        .addGap(106, 106, 106))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_searchR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CombCheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 700, 440));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Reports For Customer...");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addComponent(jSeparator4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 700, 90));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/BG.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 720, 560));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Library_Manegement_System_Reports windowshow= new Library_Manegement_System_Reports();
        windowshow.show();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_searchRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchRKeyReleased
        checkButton.setSelected(false);
        String ck=txt_searchR.getText();
        if(ck!="All"){
            CombCheck.setSelectedItem("Customer Details");
            //jButton3.setEnabled(false);
            //jButton2.setEnabled(true);
        }
        try{
            
            String sql="Select * from customers where customer_id=?";            
            
            pst=conn.prepareStatement(sql);
            pst.setString(1,txt_searchR.getText());
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    }//GEN-LAST:event_txt_searchRKeyReleased

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        txt_searchR.setText("All");
        String ck=txt_searchR.getText();
        if(ck!="All"){
            CombCheck.setSelectedItem("All Customers Details");
            //jButton3.setEnabled(true);
            //jButton2.setEnabled(false);
        }
        loadalldatatable ();
    }//GEN-LAST:event_checkButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String UID=(String.valueOf(USER.UserId).toString());
        String UNAME=(String.valueOf(USER.UserName).toString());//lab_username
        
        String value=txt_searchR.getText();
        String value1=(CombCheck.getSelectedItem().toString());
        
        Date currentDate = GregorianCalendar.getInstance().getTime();
        DateFormat df = DateFormat.getDateInstance();
        String datestring = df.format(currentDate);
                    
        Date d = new Date ();
        SimpleDateFormat sdf = new SimpleDateFormat ("hh-mm-ss");
        String timestring = sdf.format(d);
        
        /*Reports*/
            
        if(value1=="All Customers Details"){
            System.out.println("All Customers Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File(value+"-Recoeds"+"-Customers Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="Select * from customers";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(10);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,9,7,3,5,5,6,4,4,3};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Customers Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("User_Name",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Address",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Sex",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Mobile_No",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("NIC_No",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Register_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Cus_Type",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Class",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Gread_Of_Class",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(7),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(8),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(9),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(10),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }else if(value1=="All Due Books and Customers Details"){
            System.out.println("Due Books and Customers Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File("Due Books"+"-Customers Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="select K.customer_id,K.book_id,B.book_title,K.starting_date,K.due_date,K.issue "
                            +"from books_keeping K join books_tb B on  K.book_id=B.book_id";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(6);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,3,9,5,5,4};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Due Books and Customers Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_Title",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Starting_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Due_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Issue",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }else if(value1=="Due Books and Customer Details"){
            System.out.println("Due Books and Customer Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File("CustomerID-"+value+" Due Books"+"-Customers Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="select K.customer_id,K.book_id,B.book_title,K.starting_date,K.due_date,K.issue "
                            +"from books_keeping K join books_tb B on  K.book_id=B.book_id where K.customer_id="+value+"";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(6);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,3,9,5,5,4};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Due Books and Customer Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_Title",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Starting_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Due_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Issue",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }else if(value1=="Read Books and Customer Details"){
            System.out.println("Read Books and Customer Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File("CustomerID-"+value+" Read Books"+"-Customer Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="select K.customer_id,K.book_id,B.book_title,K.issue "
                            +"from books_keeping K join books_tb B on  K.book_id=B.book_id where K.customer_id="+value+"";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(4);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,3,9,5};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Read Books and Customer Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_Title",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Issue",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                       
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }else if(value1=="All Read Books and Customers Details"){
            System.out.println("Read Books and Customer Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File("All Read Books"+"-Customers Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="select K.customer_id,K.book_id,B.book_title,K.issue "
                            +"from books_keeping K join books_tb B on  K.book_id=B.book_id";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(4);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,3,9,5,};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Read Books and Customer Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Book_Title",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Issue",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }else{
            System.out.println("Customers Details");
            JFileChooser dialog=new JFileChooser();
            dialog.setSelectedFile(new File("Cus_Id "+value+""+"-Customer Details"+" "+datestring+" "+timestring+".pdf"));
            int dialogResult=dialog.showSaveDialog(null);
            if(dialogResult==JFileChooser.APPROVE_OPTION){
                String filepath = dialog.getSelectedFile().getPath();
                try{
                    String sql="Select * from customers where customer_id='"+value+"'";            
            
                    pst=conn.prepareStatement(sql);
                    rs=pst.executeQuery();
                
                    Document myDocument=new Document();
                    PdfWriter myWriter=PdfWriter.getInstance(myDocument, new FileOutputStream(filepath));
                    PdfPTable table=new PdfPTable(10);
                    myDocument.open();
                
                    float[] columnWidths=new float[]{3,9,7,3,5,5,6,4,4,3};
                    table.setWidths(columnWidths);
                    
                    table.setWidthPercentage(100);
                
                    myDocument.add(new Paragraph("------------Library Manegement System-----------",FontFactory.getFont(FontFactory.TIMES_BOLD,25,Font.BOLD)));
                    myDocument.add(new Paragraph("Customer Details...",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph(new Date().toString()));
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                
                    table.addCell(new PdfPCell(new Paragraph("Customer_ID",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("User_Name",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Address",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Sex",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Mobile_No",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("NIC_No",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Register_Date",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Cus_Type",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Class",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    table.addCell(new PdfPCell(new Paragraph("Gread_Of_Class",FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.BOLD))));
                    
                    while(rs.next()){
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(1),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(2),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(3),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(4),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(5),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(6),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(7),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(8),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(9),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        table.addCell(new PdfPCell(new Paragraph(rs.getString(10),FontFactory.getFont(FontFactory.TIMES_BOLD,9,Font.NORMAL))));
                        
                    }   
                    myDocument.add(table);
                    myDocument.add(new Paragraph("=============================================",FontFactory.getFont(FontFactory.TIMES_BOLD,20,Font.BOLD)));
                    myDocument.add(new Paragraph("User Id :"+"   "+UID,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.add(new Paragraph("User Name :"+" "+UNAME,FontFactory.getFont(FontFactory.TIMES_BOLD,10,Font.NORMAL)));
                    myDocument.close();
                    }catch(Exception e){
                        JOptionPane.showMessageDialog(null, e);
                    }finally{
                        try{
                            rs.close();
                            pst.close();
                        }catch(Exception e){
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                }
            JOptionPane.showMessageDialog(null, "Report was successfully generated");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER){
            Library_Manegement_System_Reports windowshow= new Library_Manegement_System_Reports();
        windowshow.show();
        this.dispose();
        }
    }//GEN-LAST:event_jButton1KeyPressed

    private void CombCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombCheckActionPerformed
            String value=txt_searchR.getText();
            String value1=(CombCheck.getSelectedItem().toString());
            if(value1=="All Customers Details"){
                txt_searchR.setText("All");
                loadalldatatable ();
            }else if(value1=="Due Books and Customer Details"){
                loadDueBooksdatatable ();
            }else if(value1=="All Due Books and Customers Details"){
                txt_searchR.setText("All");
                loadallDueBooksdatatable ();
            }else if(value1=="Read Books and Customer Details"){
                loadReadBooksdatatable ();
            }else if(value1=="All Read Books and Customers Details"){
                txt_searchR.setText("All");
                loadallReadBooksdatatable ();
            }else{
                
            }
    }//GEN-LAST:event_CombCheckActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Library_Manegement_System_Reports_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Library_Manegement_System_Reports_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Library_Manegement_System_Reports_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Library_Manegement_System_Reports_Customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Library_Manegement_System_Reports_Customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CombCheck;
    private javax.swing.JTable TableCus;
    private javax.swing.JCheckBox checkButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField txt_searchR;
    // End of variables declaration//GEN-END:variables

    private void seticon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LibraryMS.png")));
    }

    private void loadallReadBooksdatatable() {
        try{
            
            String sql="select K.customer_id,K.book_id,B.book_title,K.issue "
                        +"from books_keeping K join books_tb B on  K.book_id=B.book_id";            
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    }

    private void loadallDueBooksdatatable() {
        try{
            
            String sql="select K.customer_id,K.book_id,B.book_title,K.starting_date,K.due_date,K.issue "
                    +"from books_keeping K join books_tb B on  K.book_id=B.book_id";           
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, e);
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    }

    private void loadDueBooksdatatable() {
        String value=txt_searchR.getText();
        try{
            
            String sql="select K.customer_id,K.book_id,B.book_title,K.starting_date,K.due_date,K.issue "
                    +"from books_keeping K join books_tb B on  K.book_id=B.book_id where customer_id="+value+"";           
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            CombCheck.setSelectedItem("All Customers Details");
            JOptionPane.showMessageDialog(this, "Please enter customer id....");
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    }

    private void loadReadBooksdatatable() {
        String value=txt_searchR.getText();
        try{
            
            String sql="select K.customer_id,K.book_id,B.book_title,K.issue "
                        +"from books_keeping K join books_tb B on  K.book_id=B.book_id where customer_id="+value+"";            
            
            pst=conn.prepareStatement(sql);
            rs=pst.executeQuery();
            TableCus.setModel(DbUtils.resultSetToTableModel(rs));
            
            
        }catch(Exception e){
            CombCheck.setSelectedItem("All Customers Details");
            JOptionPane.showMessageDialog(this, "Please enter customer id....");
        }finally{
            try{
                
                rs.close();
                pst.close();
                
            }catch(Exception e){
                
            }
        }
    }
}
